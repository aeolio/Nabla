The symbol USE_STRTOD_FOR_FROM_CHARS is initially not defined. 

#if _GLIBCXX_HAVE_USELOCALE
// FIXME: This should be reimplemented so it doesn't use strtod and newlocale.
// That will avoid the need for any memory allocation, meaning that the
// non-conforming errc::not_enough_memory result cannot happen.
# define USE_STRTOD_FOR_FROM_CHARS 1
#endif

It will never be set, because the target system does not use locales 
(see include/c++/13.1.0/i586-buildroot-linux-uclibc/bits/c++config.h, 
line 1388)

/* Define to 1 if you have the `uselocale' function. */
/* #undef _GLIBCXX_HAVE_USELOCALE */

This results in code for from_chars_strtod not being generated, and 
later to the following build error:

libtool: compile:  /home/data/alix.2/build/host-gcc-final-13.1.0/build/./gcc/xgcc -shared-libgcc -B/home/data/alix.2/build/host-gcc-final-13.1.0/build/./gcc -nostdinc++ -L/home/data/alix.2/build/host-gcc-final-13.1.0/build/i586-buildroot-linux-uclibc/libstdc++-v3/src -L/home/data/alix.2/build/host-gcc-final-13.1.0/build/i586-buildroot-linux-uclibc/libstdc++-v3/src/.libs -L/home/data/alix.2/build/host-gcc-final-13.1.0/build/i586-buildroot-linux-uclibc/libstdc++-v3/libsupc++/.libs -B/home/data/alix.2/host/i586-buildroot-linux-uclibc/bin/ -B/home/data/alix.2/host/i586-buildroot-linux-uclibc/lib/ -isystem /home/data/alix.2/host/i586-buildroot-linux-uclibc/include -isystem /home/data/alix.2/host/i586-buildroot-linux-uclibc/sys-include -I/home/data/alix.2/build/host-gcc-final-13.1.0/libstdc++-v3/../libgcc -I/home/data/alix.2/build/host-gcc-final-13.1.0/build/i586-buildroot-linux-uclibc/libstdc++-v3/include/i586-buildroot-linux-uclibc -I/home/data/alix.2/build/host-gcc-final-13.1.0/build/i586-buildroot-linux-uclibc/libstdc++-v3/include -I/home/data/alix.2/build/host-gcc-final-13.1.0/libstdc++-v3/libsupc++ -std=gnu++17 -nostdinc++ -D_GLIBCXX_SHARED -fno-implicit-templates -Wall -Wextra -Wwrite-strings -Wcast-qual -Wabi=2 -fdiagnostics-show-location=once -ffunction-sections -fdata-sections -frandom-seed=fs_ops.lo -fimplicit-templates -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -O2 -g0 -D_GNU_SOURCE -c ../../../../../libstdc++-v3/src/c++17/fs_ops.cc  -fPIC -DPIC -D_GLIBCXX_SHARED -o fs_ops.o
../../../../../libstdc++-v3/src/c++17/floating_from_chars.cc: In function ‘std::from_chars_result std::from_chars(const char*, const char*, _Float128&, chars_format)’:
../../../../../libstdc++-v3/src/c++17/floating_from_chars.cc:1281:10: error: ‘from_chars_strtod’ was not declared in this scope
 1281 |   return from_chars_strtod(first, last, value, fmt);
      |          ^~~~~~~~~~~~~~~~~
make[7]: *** [Makefile:587: floating_from_chars.lo] Error 1
make[7]: *** Waiting for unfinished jobs....
make[6]: *** [Makefile:792: all-recursive] Error 1
make[5]: *** [Makefile:576: all-recursive] Error 1
make[4]: *** [Makefile:501: all] Error 2
make[3]: *** [Makefile:12618: all-target-libstdc++-v3] Error 2
make[2]: *** [Makefile:1039: all] Error 2
make[1]: *** [package/pkg-generic.mk:293: /home/data/alix.2/build/host-gcc-final-13.1.0/.stamp_built] Error 2
make: *** [Makefile:23: _all] Error 2

Fix this error by making the generation of code for from_chars() 
also dependent on the definition of USE_STRTOD_FOR_FROM_CHARS. 

--- a/libstdc++-v3/src/c++17/floating_from_chars.cc	2023-04-26 09:09:43.000000000 +0200
+++ b/libstdc++-v3/src/c++17/floating_from_chars.cc	2023-05-19 07:56:56.754330183 +0200
@@ -1264,6 +1264,8 @@
 __attribute__((alias ("_ZSt10from_charsPKcS0_RdSt12chars_format")));
 #endif
 
+#if defined(USE_STRTOD_FOR_FROM_CHARS)
+// otherwise there is no from_chars_strtod
 #ifdef _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT
 from_chars_result
 from_chars(const char* first, const char* last, __ieee128& value,
@@ -1282,6 +1284,8 @@
 }
 #endif
 
+#endif // USE_STRTOD_FOR_FROM_CHARS
+
 #endif // USE_LIB_FAST_FLOAT || USE_STRTOD_FOR_FROM_CHARS
 
 _GLIBCXX_END_NAMESPACE_VERSION
