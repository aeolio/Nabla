GCC libstdc++ defines a weak reference to a protected symbol in the thread 
library. This later leads to a link error if using binutils 2.39 or later:

/home/data/alix.2/host/lib/gcc/i586-buildroot-linux-uclibc/12.2.0/../../../../i586-buildroot-linux-uclibc/bin/ld: mpd.p/src_command_PlayerCommands.cxx.o: non-canonical reference to canonical protected function `__pthread_key_create' in /home/data/alix.2/host/i586-buildroot-linux-uclibc/sysroot/lib/libc.so.1
/home/data/alix.2/host/lib/gcc/i586-buildroot-linux-uclibc/12.2.0/../../../../i586-buildroot-linux-uclibc/bin/ld: failed to set dynamic section sizes: bad value

--- a/libgcc/gthr-posix.h
+++ b/libgcc/gthr-posix.h
@@ -234,10 +234,12 @@
    there (and interceptor libraries lose).  */
 
 #ifdef __GLIBC__
+/*
 __gthrw2(__gthrw_(__pthread_key_create),
 	 __pthread_key_create,
 	 pthread_key_create)
-# define GTHR_ACTIVE_PROXY	__gthrw_(__pthread_key_create)
+*/
+# define GTHR_ACTIVE_PROXY	__gthrw_(pthread_cancel)
 #elif defined (__BIONIC__)
 # define GTHR_ACTIVE_PROXY	__gthrw_(pthread_create)
 #else
