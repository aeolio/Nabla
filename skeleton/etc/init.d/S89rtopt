#!/bin/sh
#
# rtopt	Optimize RT priorities for audio related processes.
#
# shellcheck disable=SC1091	# do not follow include files

### initialize system variables
[ -x /etc/nabla.conf ] && . /etc/nabla.conf

### functions that are used in more than one init script
[ -x /etc/init.d/init_functions ] && . /etc/init.d/init_functions

### this is a startup only script
[ "$1" != "start" ] && exit 0

# Set CPU frequency scaling governor to performance 
# Disable frequency scaling by increasing the minimum value
# $1 = cpufreq or policy directory
change_cpufreq_settings() {
	cpufreq_ifc=$1
	echo "adjust cpufreq interface $cpufreq"
	governor=performance
	if [ -d "$cpufreq_ifc" ]; then
		if grep -q $governor "$cpufreq_ifc/scaling_available_governors"; then
			echo $governor > "$cpufreq_ifc/scaling_governor"
		fi
		cat "$cpufreq_ifc/scaling_max_freq" > "$cpufreq_ifc/scaling_min_freq"
	fi
}

### modify processor frequency setup if enabled in nabla config
if [ "$CPUFREQ_OPTIMIZATION" = Y ]; then
	sysfs_cpu="/sys/devices/system/cpu"
	policy="$sysfs_cpu/cpufreq/policy0"
	available_cpus="$sysfs_cpu/cpu[0-9]*"
	# use cpufreq_policy if available
	if [ -d $policy ]; then
		change_cpufreq_settings $policy
	# otherwise set per CPU cpufreq
	else
		for cpu in $available_cpus; do
			cpufreq=$cpu/cpufreq
			if [ -d "$cpufreq" ]; then
				change_cpufreq_settings "$cpufreq"
			fi
			done
	fi
fi

# adjust configured processes' priority
for priority in $PRIORITY_LIST; do
	process_list=$(eval echo \$"$priority"_LIST)
	priority_value=$(eval echo \$"$priority")
	for process in $process_list; do
		echo "$process $priority_value"
		for pid in $(_pidof "$process"); do
			# shellcheck disable=SC2154	# _chrt_policy is from init_functions
			chrt "$(_chrt_policy)" -p "$priority_value" "$pid"
		done
	done
done

# favor discarding mapped (file cache) over unmapped (process memory) pages
echo 10 > /proc/sys/vm/swappiness

# disable real-time throttling
# OS Jitter text recommends disabling completely (sched_rt_runtime_us == -1)
# linuxrealtime.org/index.php/Improving_the_Real-Time_Properties proposes 1000000 
# rtt default levels are (0.95s /1.00s)
echo "1000000" > /proc/sys/kernel/sched_rt_runtime_us # rt share of period
echo "1000000" > /proc/sys/kernel/sched_rt_period_us # accounting period

# Delay vm statistics timer.  This may be obsolete since Christoph Lameter's 
# vm shepherd patch.  For reference see lkml.org/lkml/2013/9/4/379
# aarch64 still has this setting [2025-10-23]
vm_statistics=/proc/sys/vm/stat_interval
[ -f $vm_statistics ] && echo 300 > $vm_statistics

# change block device writeback affinity
writeback=/sys/bus/workqueue/devices/writeback
writeback_numa=$writeback/numa
[ -f $writeback_numa ] && echo 0 > $writeback_numa
writeback_cpumask=$writeback/cpumask
# shellcheck disable=SC2154	# _get_nrt_cpumask is from init_functions
[ -f $writeback_cpumask ] && echo "$_get_nrt_cpumask" > $writeback_cpumask

# increase maximum allocatable memory for USB filesystems 
# see (drivers/usb/core/devio.c)
usbcore_parameters=/sys/module/usbcore/parameters
[ -d $usbcore_parameters ] && echo 64 > $usbcore_parameters/usbfs_memory_mb
