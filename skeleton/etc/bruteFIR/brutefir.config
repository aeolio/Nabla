## GENERAL SETTINGS ##

float_bits: 32;		# internal floating point precision
sampling_rate: 192000;	# sampling rate in Hz of audio interfaces
filter_length: 128,64;	# filter partition size & number of partitions 
show_progress: true;	# echo filtering progress to stderr
modules_path: "/usr/lib"; # extra path where to find BruteFIR modules
convolver_config: "/etc/bruteFIR/convolver.config"; # location of convolver config file


## COEFFICENTS ##

coeff "linear" {
  filename: "dirac pulse";
  format: "FLOAT_LE";	# file format
  attenuation: 0.0;	# attenuation in dB
  blocks: -1;		# how long in blocks
  skip: 0;		# how many bytes to skip
  shared_mem: false;	# allocate in shared memory
};


## INPUTS ##

input "left_inp","right_inp" {
  device: "file" {
    path: "/var/run/bruteFIR/bf_inp"; 
  };  # module and parameters to get audio
  sample: "S24_LE";	# sample format
  channels: 2/0,1;	# number of open channels / which to use
  delay: 0,0;		# delay in samples for each channel
  maxdelay: -1;		# max delay for variable delays
  subdelay: 0,0;	# subsample delay in 1/100th sample for each channel
  mute: false,false;	# mute active on startup for each channel
};


## OUTPUTS ##

output "left_out","right_out" {
  # device: "file" {
  #   path: "/var/run/bruteFIR/bf_out"; append: true; block: true; 
  # };  # module and parameters to put audio
  device: "alsa" { 
    device: "analogue0"; ignore_xrun: true; 
  };
  sample: "S32_LE";	# sample format
  channels: 2/0,1;	# number of open channels / which to use
  delay: 0,0;		# delay in samples for each channel
  maxdelay: -1;		# max delay for variable delays
  subdelay: 0,0;	# subsample delay in 1/100th sample for each channel
  mute: false,false;	# mute active on startup for each channel
  dither: false;	# apply dither
};


## FILTERS ##

filter "left_filter" {
  from_inputs: "left_inp"/0.0;
  to_outputs: "left_out"/0.0;
  process: 0;		# process index to run in (-1 means auto)
  coeff: "linear";
  delay: 0;		# predelay, in blocks
  crossfade: false;	# crossfade when coefficient is changed
};

filter "right_filter" {
  from_inputs: "right_inp"/0.0;
  to_outputs: "right_out"/0.0;
  process: 0;		# process index to run in (-1 means auto)
  coeff: "linear";
  delay: 0;		# predelay, in blocks
  crossfade: false;	# crossfade when coefficient is changed
};

