--- interbench-master/interbench.c
+++ interbench-next/interbench.c
@@ -50,6 +50,7 @@
 #include <sys/statvfs.h>
 #include "interbench.h"
 
+#define TIMESTAMP_LENGTH	20
 #define MAX_UNAME_LENGTH	100
 #define MAX_LOG_LENGTH		((MAX_UNAME_LENGTH) + 4)
 #define MIN_BLK_SIZE		512
@@ -72,7 +73,7 @@
 	char logfilename[MAX_LOG_LENGTH];
 	int log;
 	char unamer[MAX_UNAME_LENGTH];
-	char datestamp[13];
+	char datestamp[TIMESTAMP_LENGTH];
 	cpu_set_t cpumask;
 	FILE *logfile;
 } ud = {
@@ -1022,7 +1023,7 @@
 
 	loops_per_msec = 1000000;
 	accuracy = 0.01;
-	duration = 1000000;
+	duration = 1000000; /* one millisecond */
 	loop_counter = 0;
 	redo_counter = 0;
 	start_time = get_usecs(&myts);
@@ -1034,7 +1035,7 @@
 redo:
 
 	/* Calibrate to within initial 1% accuracy */
-	while (abs(run_time - duration) > duration * accuracy) {
+	while (fabs((float) run_time - (float) duration) > (float) duration * accuracy) {
 		loops = loops_per_msec;
 		start_time = get_nsecs(&myts);
 		burn_loops(loops);
@@ -1056,13 +1057,13 @@
 	run_time = get_nsecs(&myts) - start_time;
 
 	/* Tolerate 5% error on checking */
-	if (abs(run_time - duration) > duration * 5 * accuracy) {
+	if (fabs((float) run_time - (float) duration) > (float) duration * accuracy * 5.0) {
 		++redo_counter;
 		microsleep(duration/2); /* also here a pause increases reliability */
 		goto redo;
 	}
 
-	accuracy = (float) abs(run_time - duration) / (float) duration;
+	accuracy = fabs((float) run_time - (float) duration) / (float) duration;
 	fprintf(stderr,"Calibrated with %u loops %u repetitions %0.4f accuracy\n", 
 		loop_counter, redo_counter, accuracy);
 	ud.loops_per_ms = loops_per_msec;
@@ -1094,12 +1095,12 @@
 void show_latencies(struct thread *th)
 {
 	struct data_table *tbj;
-	struct tk_thread *tk;
+	// struct tk_thread *tk;
 	long double sd;
 	double average_latency, max_latency, deadlines_met, samples_met;
 
 	tbj = th->dt;
-	tk = &th->tkthread;
+	// tk = &th->tkthread;
 
 	if (tbj->nr_samples > 1) {
 		average_latency = (double) tbj->total_latency / (double) tbj->nr_samples;
@@ -1283,7 +1284,7 @@
 	minutes = mytm->tm_min;
 	strncpy(ud.unamer, buf.release, MAX_UNAME_LENGTH);
 
-	sprintf(ud.datestamp, "%2d%02d%02d%02d%02d",
+	sprintf(ud.datestamp, "%4d%02d%02d%02d%02d",
 		year, month, day, hours, minutes);
 	snprintf(ud.logfilename, MAX_LOG_LENGTH, "%s.log", ud.unamer);
 }

