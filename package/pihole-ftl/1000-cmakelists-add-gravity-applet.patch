--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -241,6 +241,8 @@
         FTL.h
         gc.c
         gc.h
+        gravity.c
+        gravity.h
         log.c
         log.h
         lookup-table.c
@@ -311,11 +313,35 @@
 else()
     find_library(LIBMATH m)
     target_link_libraries(pihole-FTL ${LIBMATH})
-    set(LIBRARY_SUFFIX "")
+    set(LIBRARY_SUFFIX "${CMAKE_SHARED_LIBRARY_SUFFIX}")
 endif()
 set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
 set(THREADS_PREFER_PTHREAD_FLAG TRUE)
 find_package(Threads REQUIRED)
+
+option(GRAVITY "Include gravity update functionality in build")
+
+if(GRAVITY)
+    set(sources
+        $(sources)
+        gravity.c
+        gravity.h
+        )
+
+    find_package(PkgConfig QUIET)
+    if(PKG_CONFIG_FOUND)
+        pkg_check_modules(PKG_LibCurl QUIET libcurl)
+        pkg_check_modules(PKG_LibCrypto QUIET libcurl)
+    endif()
+
+    # the gravity module needs libcurl and libcrypto (or libssl)
+    find_library(LIBCURL 
+        NAMES curl libcurl libcurl{LIBRARY_SUFFIX}
+        HINTS ${PKG_LibCurl_LIBRARY_DIRS})
+    find_library(LIBCRYPTO
+        NAMES crypto libcrypto libcrypto{LIBRARY_SUFFIX}
+        HINTS ${PKG_LibCrypto_LIBRARY_DIRS})
+endif()
 
 # for DNSSEC we need the nettle (+ hogweed) crypto and the gmp math libraries
 find_library(LIBHOGWEED NAMES libhogweed${LIBRARY_SUFFIX} hogweed HINTS /usr/local/lib64)
@@ -326,7 +352,7 @@
 find_library(LIBIDN2 NAMES libidn2${LIBRARY_SUFFIX} idn2)
 find_library(LIBUNISTRING NAMES libunistring${LIBRARY_SUFFIX} unistring)
 
-target_link_libraries(pihole-FTL rt Threads::Threads ${LIBHOGWEED} ${LIBGMP} ${LIBNETTLE} ${LIBIDN2} ${LIBUNISTRING})
+target_link_libraries(pihole-FTL rt Threads::Threads ${LIBHOGWEED} ${LIBGMP} ${LIBNETTLE} ${LIBIDN2} ${LIBUNISTRING} ${LIBCURL} ${LIBCRYPTO})
 
 if(LUA_DL STREQUAL "true")
     find_library(LIBDL dl)
