The original file is provided by mpd, and
can be found in the Buildroot package directory.

Instead of creating an overlay file and having to check manually, whenever
changes are made within Buildroot, patch the master file with additional code

Upstream: configuration change

Signed-off-by: Andreas Ziegler <br025@umbiko.net>
---
--- buildroot/package/mpd/S95mpd	2024-07-22 06:14:03.773465724 +0200
+++ target/etc/init.d/S95mpd	2024-07-21 19:02:01.543461548 +0200
@@ -5,17 +5,89 @@
 # shellcheck disable=SC2317 # functions are called via variable
 
 DAEMON="mpd"
-PIDFILE="/var/run/$DAEMON.pid"
+PIDFILE="/var/run/$DAEMON/pid"
 
 # Sanity checks
 [ -f /etc/$DAEMON.conf ] || exit 0
+[ -f /usr/bin/$DAEMON ] || exit 0
+
+HOTPLUG_DIR=/media
+
+MPD_LIB="/var/lib/$DAEMON"
+MPD_LOG="/var/log/$DAEMON"
+MPD_RUN=$(dirname $PIDFILE)
+
+MPD_MUSIC=$MPD_LIB/music
+MPD_CACHE=$MPD_LIB/cache
+
+IO_URING_MEMLIMIT=65536
+
+### initialize system variables
+[ -f /etc/nabla.conf ] && . /etc/nabla.conf
+
+### check if $DAEMON is configured to run
+[ "$NABLA_START_MUSICPLAYER" != "Y" ] && exit 0
+
+### functions that are used in more than one init script
+[ -x /etc/init.d/init_functions ] && . /etc/init.d/init_functions
+
+# unmute all alsa devices found on machine
+unmute() {
+	local mixer="/usr/bin/amixer"
+	local procfs="/proc/asound"
+
+	sound_cards=$procfs/card[0-9]
+	if [ -f $mixer ] && [ ! "$sound_cards" = "$(echo $sound_cards)" ] ; then
+		# loop through all sound devices
+		for card in `ls -d $sound_cards`; do
+			# touch only USB devices
+			if [ ! -f $card/usbid ]; then continue; fi
+			# extract device id
+			id=${card##*/card}
+			# unmute all simple controls on this device
+			amixer -c $id scontrols | \
+				sed -e 's/^Simple mixer control//' | \
+				while read line; do 
+				amixer -c $id sset "$line" 100% unmute > /dev/null 2>&1
+			done
+		done
+	fi
+}
+
+# create directories and link to music libraries
+initialize() {
+	_owner="mpd:audio"
+	mkdir -p $MPD_LIB && chown -R $_owner $MPD_LIB
+	mkdir -p $MPD_CACHE && chown -R $_owner $MPD_CACHE
+	mkdir -p $MPD_LOG && chown -R $_owner $MPD_LOG
+	mkdir -p $MPD_RUN && chown -R $_owner $MPD_RUN
+	# this is the $DAEMON link to the music directory
+	if [ ! -h $MPD_MUSIC ]; then
+		ln -s $HOTPLUG_DIR $MPD_MUSIC
+	fi
+	# create ignore list
+	echo "$NABLA_PARTITION" > $HOTPLUG_DIR/.mpdignore
+	# library file attributes may be broken by import
+	find $MPD_LIB -type f -exec chmod u=rw,g=rw,o=r {} \;
+}
 
 start() {
 	printf "Starting %s: " "$DAEMON"
+	initialize
+	unmute
+	# increase max locked memory limit for io_uring 
+	# increase real-time priority limit to enable real-time scheduling
+	ulimit -HS -l $IO_URING_MEMLIMIT -r $(expr $HARDIRQ_PRIORITY - 1)
 	start-stop-daemon --start --pidfile "$PIDFILE" \
 		--exec "/usr/bin/$DAEMON"
 	status=$?
 	if [ "$status" -eq 0 ]; then
+		# set processor affinity
+		cpu_id=$(_get_rt_cpuid)
+		pid=$(cat $PIDFILE)
+		taskset -p $(_get_cpumask $cpu_id) $pid
+		# thread priority is set by process, so this might be unnecessary
+		chrt $(_chrt_policy) -p $SOFTIRQ_PRIORITY $pid
 		echo "OK"
 	else
 		echo "FAIL"
